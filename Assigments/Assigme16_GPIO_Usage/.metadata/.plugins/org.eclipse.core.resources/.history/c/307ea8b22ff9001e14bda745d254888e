#include "Platfrom_Types.h"

#define RCC_BASE 0x40021000
#define RCC_APB2ENR *(volatile uint32*) (RCC_BASE +0x18)
#define RCC_IOAPAEN (1<<2)


#define GPIOA_BASE 0x40010800
#define GPIOA_CRH *(volatile uint32*) (GPIOA_BASE +0x04)
#define GPIOA_ODR *(volatile uint32*) (GPIOA_BASE +0x0C)
#define GPIOA_CRL *(volatile uint32*) (GPIOA_BASE +0x00)
#define GPIOA_IDR *(volatile uint32*) (GPIOA_BASE +0x08)
#define GPIOA13 (1UL<<13)

#define GPIOB_BASE 0x40010C00
#define GPIOB_CRH *(volatile uint32*) (GPIOB_BASE +0x04)
#define GPIOB_ODR *(volatile uint32*) (GPIOB_BASE +0x0C)
#define GPIOB_CRL *(volatile uint32*) (GPIOB_BASE +0x00)
#define GPIOB_IDR *(volatile uint32*) (GPIOB_BASE +0x08)
#define RCC_IOBPAEN (1<<3)
void clock_init(void)
{
	/*Enable the clock for GPIOA  on APB2 BUS*/
	RCC_APB2ENR|=RCC_IOAPAEN;

	/*Enable the clock for GPIOB  on APB2 BUS*/
	RCC_APB2ENR|=RCC_IOBPAEN;

}
void GPIO_init(void)
{

	/*
	 * PA1 Input , Floating
	 */

	/*
	 * PB1 Output , Push Pull mode
	 */


	/*
	 * PA13 Input , Floating
	 */


	/*
	 * PB13 Output , Push Pull mode
	 */
}

int main(void)
{
clock_init();
GPIO_init();
;
while(1);

}
